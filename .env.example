# ===============================
# Crypto Alerts — .env.example
# Single-service (Render Web Service) configuration
# Copy to .env locally or set these in Render → Environment
# All lines are examples; replace placeholders with real values.
# ===============================

# --- Core ---
BOT_TOKEN=1234567890:REPLACE_WITH_YOUR_TELEGRAM_BOT_TOKEN
DATABASE_URL=postgresql://user:password@host:5432/dbname
ADMIN_TELEGRAM_IDS=123456789,987654321   # comma-separated, optional

# --- Service toggles (single process) ---
RUN_BOT=1
RUN_ALERTS=1
# Render provides PORT automatically; keep default if running locally
PORT=10000

# --- Plans ---
# Free users can keep up to this many active alerts. Premium/Admin = unlimited.
FREE_ALERT_LIMIT=10

# --- Worker / performance ---
# How often to evaluate alerts (seconds). 60 = near real-time without overloading.
WORKER_INTERVAL_SECONDS=60
# PostgreSQL advisory locks (avoid multiple pollers/workers in same DB)
BOT_LOCK_ID=911001
ALERTS_LOCK_ID=911002

# --- Bot heartbeat (health endpoints) ---
BOT_HEART_INTERVAL_SECONDS=60
BOT_HEART_TTL_SECONDS=180

# --- Optional: Web/Billing integration (PayPal) ---
# Public base URL of your Render service (https://your-service.onrender.com)
WEB_URL=
# Either set a PayPal Plan ID OR a direct subscribe URL
PAYPAL_PLAN_ID=
PAYPAL_SUBSCRIBE_URL=
# If you implement admin-only manage endpoints, keep a shared secret here
ADMIN_KEY=

# --- Extra Features Pack (optional) ---
# Whale Alert API key (https://docs.whale-alert.io/). Leave empty to disable /whale.
WHALE_ALERT_API_KEY=
# News feeds (RSS). Comma-separated; defaults are CoinDesk + CoinTelegraph if empty.
NEWS_FEEDS=
# Default pump threshold (%). Users can override via /pumplive on <percent>
PUMP_THRESHOLD_PERCENT=10
# Symbols scanned for pump alerts (comma-separated Binance pairs)
SYMBOLS_SCAN=BTCUSDT,ETHUSDT,SOLUSDT,XRPUSDT,PEPEUSDT,SHIBUSDT

# --- Logging / diagnostics (optional) ---
# If you want unbuffered logs on some platforms
PYTHONUNBUFFERED=1

# --- Notes ---
# 1) Run DB migrations once (shell):
#    python migrate_user_seq.py
#    python migrate_user_settings.py
# 2) Start command on Render: bash start.sh
# 3) Do NOT run a second poller locally at the same time (will cause getUpdates Conflict).
